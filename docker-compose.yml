services:
  dks-api:
    image: ${API_PULL}:${API_VERSION}
    container_name: ${API_NAME}
    hostname: ${APP_HOSTNAME}
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - JAVA_ENABLE_DEBUG=${JAVA_ENABLE_DEBUG}
      - JAVA_DEBUG_PORT=${JAVA_DEBUG_PORT}
      - DB_HOST=${DB_HOST}
      - DB_ROLE_NAME=${DB_ROLE_NAME}
      - DB_ROLE_PASSWORD=${DB_ROLE_PASSWORD}
      - DB_NAME=${DB_NAME}
      - PGPORT=${PGPORT:-5432}
    ports:
      - '${API_PORT}:8080'
      - '${JAVA_DEBUG_PORT}:${JAVA_DEBUG_PORT}'
    healthcheck:
      test:
        ['CMD', 'curl', '-f', 'http://localhost:${API_PORT}/actuator/health']
      start_period: 20s
      interval: 30s
      retries: 3
      timeout: 10s
    networks:
      - frontend
      - backend
    depends_on:
      - dks-db
  dks-db:
    image: postgres:16.6-alpine@sha256:aba1fab94626cf8b0f4549055214239a37e0a690f03f142b7bca05b9ed36c6db
    container_name: ${DB_HOST}
    hostname: ${DB_HOST}
    environment:
      - PGPORT=${PGPORT:-5432}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_ROLE_NAME=${DB_ROLE_NAME}
      - DB_ROLE_PASSWORD=${DB_ROLE_PASSWORD}
      - DB_NAME=${DB_NAME}
    ports:
      - 5432:${PGPORT:-5432}
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', '${POSTGRES_USER}']
      start_period: 30s
      interval: 20s
      retries: 3
      timeout: 10s
    volumes:
      - dks-db-datastore:/var/lib/postgresql/data
      - ./db-resources/0_0_db.sh:/docker-entrypoint-initdb.d/0_0_db.sh
    networks:
      - backend

  dks-ui:
    image: ${APP_PULL}:${APP_VERSION}
    container_name: ${APP_NAME}
    ports:
      - ${APP_PORT}:3000
    environment:
      - DKS_API_BASE_URL=${DKS_API_BASE_URL}
      - ENABLE_IMAGE_URL=${ENABLE_IMAGE_URL}
    networks:
      - frontend
networks:
  frontend:
    name: frontend
  backend:
    name: backend
volumes:
  dks-db-datastore:
    name: dks-db-datastore
